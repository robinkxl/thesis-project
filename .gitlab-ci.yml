stages:
  - LHtest
#  - AXEtest

variables:
  APP: "http://localhost:1338"

# needing a build stage for download of chrome / reducing time for npm and other installations ?
# archiving?
# see commented code at end of file

lighthouse:
  image: node:18
  stage: LHtest
  before_script:
    - apt-get update && apt-get install -y wget curl ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libcups2 libdbus-1-3 libgdk-pixbuf2.0-0 libnspr4 libnss3 libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 xdg-utils libu2f-udev
    - apt-get install -y chromium  # .. no chrome before ..
    - chromium --version
  script:
    - npm ci
  #   - mkdir -p results/lighthouse/
    - curl -I http://localhost:1338 || echo "App not responding"
    - npx lhci autorun  # testing without docker because of the "priviledge mode" errors
    # something to archive artifacts or just handle it through link?
  only:
    - master
    - perceivable
  # artifacts:
    # paths:
      # - results/lighthouse/

# trying axe first -- quicker ?
# https://github.com/dequelabs/axe-core
# from the github ver. -- https://github.com/idasm-unibe-ch/unibe-web-accessibility/blob/master/.github/workflows/example_ci.yml

# TODO: theres an issue with axe not being able to do "Error: SessionNotCreatedError: session not created: 
# "probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir" ""
# however......... i tried user-data-dir arguments for each page and it didnt seem to fix the issue
#axe:
#  stage: AXEtest
#  image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
#  # strategy matrix - webpage - pages ? script has them manually for now
#  variables:
#    APP: "http://localhost:1338"
#  script:
#    - npm ci
#    - npm install -g chromedriver @axe-core/cli
#    - npm start & npx wait-on $APP
#    - mkdir -p results/axe/
#    - CHROMEDRIVER_PATH=$(which chromedriver)
#    - axe --chromedriver-path $CHROMEDRIVER_PATH $APP --exit
#
#  artifacts:
#    paths:
#      - results/axe/

# https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md
# ref : https://gitlab.com/gitlab-ci-utils/lighthouse
# ref for custom runner + lhci https://medium.com/1mgofficial/integrating-lighthouse-ci-in-your-gitlab-ci-cd-pipeline-1233b9223e5c

#stages:
#  - build
#  - test
#  - archive


# needing setup
#before_script:
# - apt-get update && apt-get install -y curl wget bash unzip
#  - npm ci
#  - npm run build --if-present  # currently not

#https://www.jenkins.io/doc/book/pipeline/docker/
#https://hub.docker.com/r/cypress/browsers/
#build:
#  stage: build
  # node:20 for more consistency instead ?
  # node:20 is better but its still missing chrome in container
  # build can just be with node:20 its faster?
  # image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
#  image: node:20
#  script:
#    - echo "Build completed"
#  artifacts:
#    paths:
#      - ./